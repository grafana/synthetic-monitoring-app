export const promUniqueConfigs = {
  results: {
    uniqueCheckConfigs: {
      status: 200,
      frames: [
        {
          schema: {
            refId: 'uniqueCheckConfigs',
            meta: {
              type: 'timeseries-multi',
              typeVersion: [0, 1],
              custom: {
                resultType: 'matrix',
              },
              executedQueryString:
                'Expr: count by(frequency, config_version) (sm_check_info{job="15 second grafana", instance="https://grafana.com"})\nStep: 30s',
            },
            fields: [
              {
                name: 'Time',
                type: 'time',
                typeInfo: {
                  frame: 'time.Time',
                },
                config: {
                  interval: 30000,
                },
              },
              {
                name: 'Value',
                type: 'number',
                typeInfo: {
                  frame: 'float64',
                },
                labels: {
                  config_version: '1741355112813336576',
                  frequency: '15000',
                },
                config: {
                  displayNameFromDS: '{config_version="1741355112813336576", frequency="15000"}',
                },
              },
            ],
          },
          data: {
            values: [
              [
                1745499600000, 1745499630000, 1745499660000, 1745499690000, 1745499720000, 1745499750000, 1745499780000,
                1745499810000, 1745499840000, 1745499870000, 1745499900000, 1745499930000, 1745499960000, 1745499990000,
                1745500020000, 1745500050000, 1745500080000, 1745500110000, 1745500140000, 1745500170000, 1745500200000,
                1745500230000, 1745500260000, 1745500290000, 1745500320000, 1745500350000, 1745500380000, 1745500410000,
                1745500440000, 1745500470000, 1745500500000, 1745500530000,
              ],
              [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            ],
          },
        },
        {
          schema: {
            refId: 'uniqueCheckConfigs',
            meta: {
              type: 'timeseries-multi',
              typeVersion: [0, 1],
              custom: {
                resultType: 'matrix',
              },
            },
            fields: [
              {
                name: 'Time',
                type: 'time',
                typeInfo: {
                  frame: 'time.Time',
                },
                config: {
                  interval: 30000,
                },
              },
              {
                name: 'Value',
                type: 'number',
                typeInfo: {
                  frame: 'float64',
                },
                labels: {
                  config_version: '1745500548077917184',
                  frequency: '60000',
                },
                config: {
                  displayNameFromDS: '{config_version="1745500548077917184", frequency="60000"}',
                },
              },
            ],
          },
          data: {
            values: [
              [
                1745500590000, 1745500620000, 1745500650000, 1745500680000, 1745500710000, 1745500740000, 1745500770000,
                1745500800000, 1745500830000, 1745500860000, 1745500890000, 1745500920000, 1745500950000, 1745500980000,
                1745501010000, 1745501040000, 1745501070000, 1745501100000, 1745501130000, 1745501160000, 1745501190000,
                1745501220000, 1745501250000, 1745501280000, 1745501310000, 1745501340000, 1745501370000, 1745501400000,
                1745501430000, 1745501460000, 1745501490000, 1745501520000, 1745501550000, 1745501580000, 1745501610000,
                1745501640000, 1745501670000, 1745501700000, 1745501730000, 1745501760000, 1745501790000, 1745501820000,
                1745501850000, 1745501880000, 1745501910000, 1745501940000, 1745501970000, 1745502000000, 1745502030000,
                1745502060000, 1745502090000, 1745502120000, 1745502150000, 1745502180000, 1745502210000, 1745502240000,
                1745502270000, 1745502300000, 1745502330000, 1745502360000, 1745502390000, 1745502420000, 1745502450000,
                1745502480000, 1745502510000, 1745502540000, 1745502570000, 1745502600000, 1745502630000, 1745502660000,
                1745502690000, 1745502720000, 1745502750000, 1745502780000, 1745502810000, 1745502840000, 1745502870000,
                1745502900000, 1745502930000, 1745502960000, 1745502990000, 1745503020000, 1745503050000, 1745503080000,
                1745503110000, 1745503140000, 1745503170000, 1745503200000,
              ],
              [
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
              ],
            ],
          },
        },
      ],
    },
  },
};
