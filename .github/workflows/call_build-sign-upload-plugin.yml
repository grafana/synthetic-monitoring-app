name: Build, Sign, Zip and Upload Plugin

on:
  workflow_call:
    inputs:
      environment:
        description: Deployment environment for the plugin (dev, prod)
        required: true
        type: string
        default: dev
    outputs:
      plugin_version:
        description: The version of the plugin that was built.
        value: ${{ jobs.build-publish.outputs.plugin_version }}

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      plugin_version: ${{ steps.read-version.outputs.plugin_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Build Environment
        uses: ./.github/actions/setup-env

      - uses: grafana/shared-workflows/actions/login-to-gcs@main
        id: login-to-gcs

      - name: log some details
        run: |
          echo "bucket: ${{ steps.login-to-gcs.outputs.bucket }}"
          echo "environment: ${{ inputs.environment }}"

      - name: Get signing token from Vault
        uses: grafana/shared-workflows/actions/get-vault-secrets@75804962c1ba608148988c1e2dc35fbb0ee21746
        with:
          common_secrets: |
            GRAFANA_ACCESS_POLICY_TOKEN=plugins/sign-plugin-access-policy-token:token

      - name: Build, Sign and Zip Plugin
        run: |
          make build sign ${{ inputs.environment == 'dev' && 'package-latest' || 'package' }}

      - name: Read plugin version
        id: read-version
        run: |
          PLUGIN_VERSION=$(cat plugin_version.txt)
          echo "plugin_version=${PLUGIN_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "Plugin version: ${PLUGIN_VERSION}"

      - name: Upload zipped plugin assets to Google Cloud Storage (GCS)
        uses: grafana/shared-workflows/actions/push-to-gcs@main
        with:
          path: ./artifacts
          bucket: ${{ inputs.environment == 'dev' && 'grafanalabs-synthetic-monitoring-app-dev' || 'grafanalabs-synthetic-monitoring-app-prod' }}
          environment: ${{ inputs.environment }}
          predefinedAcl: publicRead
          parent: false
