name: Update deployment tools

on:
  workflow_call:
    inputs:
      environment:
        description: Deployment environment for the plugin (dev, staging, production)
        required: true
        type: string
      autoMerge:
        description: Whether to automatically merge the deployment PR
        required: false
        type: string
        default: 'false'

permissions:
  contents: read
  id-token: write

jobs:
  build-sign-zip-upload:
    uses: ./.github/workflows/call_build-sign-upload-plugin.yml
    with:
      environment: ${{ (inputs.environment == 'production' || inputs.environment == 'staging') && 'prod' || inputs.environment }}

  update-deployment-tools:
    needs: build-sign-zip-upload
    uses: ./.github/workflows/call_update-deployment-tools.yml
    with:
      environment: ${{ inputs.environment }}
      autoMerge: ${{ inputs.autoMerge }}
      plugin_version: ${{ needs.build-sign-zip-upload.outputs.plugin_version }}

  publish-to-grafana-com:
    name: Publish to grafana.com (prod catalog)
    needs: build-sign-zip-upload
    runs-on: ubuntu-latest
    if: inputs.environment == 'production'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get signing token from Vault
        uses: grafana/shared-workflows/actions/get-vault-secrets@75804962c1ba608148988c1e2dc35fbb0ee21746
        with:
          common_secrets: |
            GRAFANA_ACCESS_POLICY_TOKEN=plugins/sign-plugin-access-policy-token:token

      - name: Publish plugin to grafana.com (prod catalog)
        env:
          GRAFANA_API_KEY: ${{ env.GRAFANA_ACCESS_POLICY_TOKEN }}
        run: |
          echo "Publishing plugin to grafana.com with version: ${{ needs.build-sign-zip-upload.outputs.plugin_version }}"
          ./scripts/publish-gcom.sh

  publish-to-grafana-dev:
    name: Publish to grafana-dev.com (dev catalog)
    needs: build-sign-zip-upload
    runs-on: ubuntu-latest
    if: inputs.environment == 'dev'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get dev catalog token from Vault
        uses: grafana/shared-workflows/actions/get-vault-secrets@75804962c1ba608148988c1e2dc35fbb0ee21746
        with:
          common_secrets: |
            GCOM_PUBLISH_TOKEN_DEV=plugins/gcom-publish-token:dev

      - name: Publish plugin to grafana-dev.com (dev catalog)
        env:
          GCOM_PUBLISH_TOKEN: ${{ env.GCOM_PUBLISH_TOKEN_DEV }}
        run: |
          echo "Publishing plugin to grafana-dev.com with version: ${{ needs.build-sign-zip-upload.outputs.plugin_version }}"
          ./scripts/publish-gcom-dev.sh

  publish-to-grafana-ops:
    name: Publish to grafana-ops.com (ops catalog)
    needs: build-sign-zip-upload
    runs-on: ubuntu-latest
    if: inputs.environment == 'staging'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get ops catalog token from Vault
        uses: grafana/shared-workflows/actions/get-vault-secrets@75804962c1ba608148988c1e2dc35fbb0ee21746
        with:
          common_secrets: |
            GCOM_PUBLISH_TOKEN_OPS=plugins/gcom-publish-token:ops

      - name: Publish plugin to grafana-ops.com (ops catalog)
        env:
          GCOM_PUBLISH_TOKEN: ${{ env.GCOM_PUBLISH_TOKEN_OPS }}
        run: |
          echo "Publishing plugin to grafana-ops.com with version: ${{ needs.build-sign-zip-upload.outputs.plugin_version }}"
          ./scripts/publish-gcom-ops.sh
