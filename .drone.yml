---
kind: pipeline
type: docker
name: build

trigger:
  event:
    include:
      - pull_request

steps:
  - name: build
    image: node:18
    commands:
      - ./scripts/install-ci-deps-apt.sh
      - make install lint test build
    environment:
      GCP_KEY:
        from_secret: gcp_key

---
kind: pipeline
type: docker
name: publish-dev

trigger:
  branch:
    include:
      - main
  event:
    include:
      - push

steps:
  - name: build
    image: node:18
    commands:
      - ./scripts/install-ci-deps-apt.sh
      - make install lint test build sign package-latest generate-version
    environment:
      GCP_KEY:
        from_secret: gcp_key
      GRAFANA_ACCESS_POLICY_TOKEN:
        from_secret: signing_token

  - name: publish to dev
    image: plugins/gcs
    settings:
      acl: allUsers:READER
      cache_control: no-store
      source: ./artifacts
      target: synthetic-monitoring-app/
      token:
        from_secret: gcs_sa_grafanalabsdev

  - name: Open PR to update plugin version for all dev stacks
    image: us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/updater
    settings:
      config_json: |-
        {
          "repo_owner": "grafana",
          "repo_name": "deployment_tools",
          "destination_branch": "master",
          "pull_request_branch_prefix": "auto-merge/synthetic-monitoring-plugin-release",
          "pull_request_enabled": true,
          "pull_request_existing_strategy": "ignore",
          "pull_request_message": "Triggered by ${DRONE_COMMIT_LINK}. NOTE: dev does not refer directly to an environment it refers to stacks associated with the dev 'wave'. See [here](https://github.com/grafana/deployment_tools/blob/master/ksonnet/environments/hosted-grafana/waves/provisioned-plugins/README.md#waves) for more info.",
          "pull_request_reviewers": ["VikaCep", "ckbedwell", "w1kman"],
          "update_jsonnet_attribute_configs": [
            {
              "file_path": "ksonnet/environments/hosted-grafana/waves/provisioned-plugins/grafana-synthetic-monitoring-app/dev.libsonnet",
              "jsonnet_key": "version",
              "jsonnet_value_file": "plugin_version.txt"
            }
          ]
        }
      github_app_id:
        from_secret: updater-app-id
      github_app_installation_id:
        from_secret: updater-app-installation-id
      github_app_private_key:
        from_secret: updater-app-private-key
image_pull_secrets:
  - dockerconfigjson

---
kind: pipeline
type: docker
name: publish-staging

trigger:
  event:
    - promote
  target:
    - staging
depends_on:
  - publish-dev

steps:
  - name: build
    image: node:18
    commands:
      - ./scripts/install-ci-deps-apt.sh
      - make install lint test build sign package
    environment:
      GCP_KEY:
        from_secret: gcp_key
      GRAFANA_ACCESS_POLICY_TOKEN:
        from_secret: signing_token

  # Staging reads from the production GCS bucket, so we need to publish prod assets
  - name: publish assets to GCS
    image: plugins/gcs
    settings:
      acl: allUsers:READER
      source: ./artifacts
      target: synthetic-monitoring-app-prod/
      token:
        from_secret: gcs_sa_grafanalabsglobal

  - name: Update staging stacks
    image: us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/updater
    settings:
      config_json: |-
        {
          "repo_owner": "grafana",
          "repo_name": "deployment_tools",
          "destination_branch": "master",
          "pull_request_branch_prefix": "auto-merge/synthetic-monitoring-plugin",
          "pull_request_enabled": true,
          "pull_request_existing_strategy": "ignore",
          "pull_request_message": "Triggered by ${DRONE_COMMIT_LINK}. NOTE: staging does not refer directly to an environment it refers to stacks associated with the staging 'wave'. See [here](https://github.com/grafana/deployment_tools/blob/master/ksonnet/environments/hosted-grafana/waves/provisioned-plugins/README.md#waves) for more info.",
          "pull_request_reviewers": ["VikaCep", "ckbedwell", "w1kman"],
          "update_jsonnet_attribute_configs": [
            {
              "file_path": "ksonnet/environments/hosted-grafana/waves/provisioned-plugins/grafana-synthetic-monitoring-app/staging.libsonnet",
              "jsonnet_key": "version",
              "jsonnet_value_file": "plugin_version.txt"
            }
          ]
        }
      github_app_id:
        from_secret: updater-app-id
      github_app_installation_id:
        from_secret: updater-app-installation-id
      github_app_private_key:
        from_secret: updater-app-private-key
image_pull_secrets:
  - dockerconfigjson

---
kind: pipeline
type: docker
name: publish-prod

trigger:
  event:
    - promote
  target:
    - production
depends_on:
  - publish-staging

steps:
  - name: build
    image: node:18
    commands:
      - ./scripts/install-ci-deps-apt.sh
      - make install lint test build sign package
    environment:
      GCP_KEY:
        from_secret: gcp_key
      GRAFANA_ACCESS_POLICY_TOKEN:
        from_secret: signing_token
      GITHUB_TOKEN:
        from_secret: github_token

  - name: Open PR to update plugin version for all production stacks
    image: us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/updater
    settings:
      config_json: |-
        {
          "repo_owner": "grafana",
          "repo_name": "deployment_tools",
          "destination_branch": "master",
          "pull_request_branch_prefix": "auto-merge/synthetic-monitoring-plugin",
          "pull_request_enabled": true,
          "pull_request_existing_strategy": "ignore",
          "pull_request_message": "Triggered by ${DRONE_COMMIT_LINK}. NOTE: prod does not refer directly to an environment it refers to stacks associated with the prod 'wave'. See [here](https://github.com/grafana/deployment_tools/blob/master/ksonnet/environments/hosted-grafana/waves/provisioned-plugins/README.md#waves) for more info.",
          "pull_request_reviewers": ["VikaCep", "ckbedwell", "w1kman"],
          "update_jsonnet_attribute_configs": [
            {
              "file_path": "ksonnet/environments/hosted-grafana/waves/provisioned-plugins/grafana-synthetic-monitoring-app/prod.libsonnet",
              "jsonnet_key": "version",
              "jsonnet_value_file": "plugin_version.txt"
            }
          ]
        }
      github_app_id:
        from_secret: updater-app-id
      github_app_installation_id:
        from_secret: updater-app-installation-id
      github_app_private_key:
        from_secret: updater-app-private-key

  - name: publish plugin to grafana.com (release)
    image: ubuntu:latest
    environment:
      GRAFANA_API_KEY:
        from_secret: signing_token
    commands:
      - ./scripts/install-ci-deps-apt.sh
      - ls -al ./scripts
      - ./scripts/publish-gcom.sh

image_pull_secrets:
  - dockerconfigjson
# Import secrets from Vault
---
kind: secret
name: gcs_sa_grafanalabsdev

get:
  path: infra/data/ci/synthetic-monitoring-app/gcs-service-account-dev
  name: credentials.json
---
kind: secret
name: gcs_sa_grafanalabsglobal

get:
  path: infra/data/ci/synthetic-monitoring-app/gcs-service-account-global
  name: credentials.json
---
kind: secret
name: gh_token

get:
  path: infra/data/ci/github/grafanabot
  name: pat
---
kind: secret
name: dockerconfigjson

get:
  path: secret/data/common/gar
  name: .dockerconfigjson
---
kind: secret
name: updater-app-id

get:
  name: app-id
  path: infra/data/ci/github/updater-app
---
kind: secret
name: updater-app-installation-id

get:
  name: app-installation-id
  path: infra/data/ci/github/updater-app
---
kind: secret
name: updater-app-private-key

get:
  name: private-key
  path: infra/data/ci/github/updater-app

---
get:
  name: gcp_key
  path: infra/data/ci/drone-plugins
kind: secret
name: gcp_key
---
kind: signature
hmac: e95f73a48d0ee4a5bd011aca40fac557932eefd07a9f5ba5fbdd18c2de3cc778

...
